package ch02.review;

// JVM(자바 가상 머신)의 메모리 구조 
// 메서드 영역 : 모든 쓰레드가 공유하며 클래스의 구조 정보와 static으로 선언된 변수 혹은 메서드가 저장되는 공간 
// 힙 영역 : 모든 쓰레드가 공유하며 클래스로 생성된 인스턴스와 배열이 저장되는 공간 (가비지 컬렉션의 주요 대상) // 동적 메모리
// 스택 영역 : 각 쓰레드 별로 존재하는 공간, 로컬 변수나 메서드 호출 데이터가 저장되는 공간 (각 메서드가 종료되면 제거 됨) // 정적 메모리 

// 아래와 같은 클래스의 구조 정보는 '메서드 영역'에 저장된다. 
class Class {
	// 클래스 변수의 데이터는 '메서드 영역'에 저장된다.
	static int staticVariable;
	// 인스턴스 변수는 구조 정보만 '메서드 영역'에 저장된다. // 데이터 저장 X 정보만 저장 
	int instanceVariable;
	
	// 클래스 메서드의 구현 데이터는 '메서드 영역'에 저장된다.
	static void staticMethod() {}
	// 인스턴스 메서드의 구조 정보만 '메서드 영역'에 저장된다. 
	void instanceMethod () {}
} 

public class A_JVM {
	
	// 이 퍼블릭 클래스 안에서 정의되는 데이터는 스택 영역에 저장됨 
	// 메인 메서드 실행되면 실행시 필요한 데이터는 '스택 영역'에 저장된다.
	public static void main(String[] args) {
		
		// 지역 변수의 데이터는 '스택 영역'에 저장된다.
		int number = 0;
		
		// 지역 참조 변수는 '스택 영역'에 저장된다.
		// 실제 인스턴스는 '힙 영역'에 저장된다. 
		Class instance = new Class();
		
		// 호출한 메서드가 실행되면 실행시 필요한 데이터는 '스택 영역'에 저장된다.
		// 호출한 메서드가 종료되면 스택 영역에서 자동으로 제거 
		instance.instanceMethod();

	}

}


// 스택영역과 힙영역 구분하기 
// 복사되는 주체가 무엇인가?
// 참조형으로 복사되서 넘겨가는 것은 주소가 넘겨진 것이기에 다시 찍어서 보면 변경된 것 처럼 보인다.
// 실제 원본이 지속적으로 존재하는지 안하는지에 대한 차이
// 스택 영역으로 반환하면 원본이 삭제
// 힙 영역으로 반환되면 스택영역에서 제거되도 주소가 넘겨진 것이기에 원본이 남아 있어 그대로 유지되어 있다. 
